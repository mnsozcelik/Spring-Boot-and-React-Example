{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\ozcelik\\\\Desktop\\\\workspace\\\\frontend\\\\src\\\\shared\\\\ApiProgress.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n}\n\nexport function withApiProgress(WrappedComponent, apiPath) {\n  var _class, _temp;\n\n  return _temp = _class = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        pendingApiCall: false\n      };\n\n      this.registerInterceptors = () => {\n        this.requestInterceptor = axios.interceptors.request.use(request => {\n          this.updateApiCallFor(request.url, true);\n          return request;\n        });\n        this.responseInterceptor = axios.interceptors.response.use(response => {\n          this.updateApiCallFor(response.config.url, false);\n          return response;\n        }, error => {\n          this.updateApiCallFor(error.config.url, false);\n          throw error;\n        });\n      };\n\n      this.unregisterInterceptors = () => {\n        axios.interceptors.request.eject(this.requestInterceptor);\n        axios.interceptors.response.eject(this.responseInterceptor);\n      };\n\n      this.updateApiCallFor = (url, inProgress) => {\n        if (url === apiPath) {\n          this.setState({\n            pendingApiCall: inProgress\n          });\n        }\n      };\n    }\n\n    componentDidMount() {\n      this.registerInterceptors();\n    }\n\n    componentWillUnmount() {\n      this.unregisterInterceptors();\n    }\n\n    render() {\n      const pendingApiCall = this.state.pendingApiCall || this.props.pendingApiCall;\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props,\n        pendingApiCall: pendingApiCall\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n\n  }, _class.displayName = `ApiProgress(${getDisplayName(WrappedComponent)})`, _temp;\n}","map":{"version":3,"sources":["D:/Users/ozcelik/Desktop/workspace/frontend/src/shared/ApiProgress.js"],"names":["React","Component","axios","getDisplayName","WrappedComponent","displayName","name","withApiProgress","apiPath","state","pendingApiCall","registerInterceptors","requestInterceptor","interceptors","request","use","updateApiCallFor","url","responseInterceptor","response","config","error","unregisterInterceptors","eject","inProgress","setState","componentDidMount","componentWillUnmount","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACxC,SAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,WAAhE;AACD;;AAED,OAAO,SAASC,eAAT,CAAyBH,gBAAzB,EAA2CI,OAA3C,EAAoD;AAAA;;AACzD,0BAAO,cAAcP,SAAd,CAAwB;AAAA;AAAA;AAAA,WAG7BQ,KAH6B,GAGrB;AACNC,QAAAA,cAAc,EAAE;AADV,OAHqB;;AAAA,WAe7BC,oBAf6B,GAeN,MAAM;AAC3B,aAAKC,kBAAL,GAA0BV,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCD,OAAD,IAAa;AACpE,eAAKE,gBAAL,CAAsBF,OAAO,CAACG,GAA9B,EAAmC,IAAnC;AACA,iBAAOH,OAAP;AACD,SAHyB,CAA1B;AAIA,aAAKI,mBAAL,GAA2BhB,KAAK,CAACW,YAAN,CAAmBM,QAAnB,CAA4BJ,GAA5B,CACxBI,QAAD,IAAc;AACZ,eAAKH,gBAAL,CAAsBG,QAAQ,CAACC,MAAT,CAAgBH,GAAtC,EAA2C,KAA3C;AACA,iBAAOE,QAAP;AACD,SAJwB,EAKxBE,KAAD,IAAW;AACT,eAAKL,gBAAL,CAAsBK,KAAK,CAACD,MAAN,CAAaH,GAAnC,EAAwC,KAAxC;AACA,gBAAMI,KAAN;AACD,SARwB,CAA3B;AAUD,OA9B4B;;AAAA,WAgC7BC,sBAhC6B,GAgCJ,MAAM;AAC7BpB,QAAAA,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BS,KAA3B,CAAiC,KAAKX,kBAAtC;AACAV,QAAAA,KAAK,CAACW,YAAN,CAAmBM,QAAnB,CAA4BI,KAA5B,CAAkC,KAAKL,mBAAvC;AACD,OAnC4B;;AAAA,WAqC7BF,gBArC6B,GAqCV,CAACC,GAAD,EAAMO,UAAN,KAAqB;AACtC,YAAIP,GAAG,KAAKT,OAAZ,EAAqB;AACnB,eAAKiB,QAAL,CAAc;AAAEf,YAAAA,cAAc,EAAEc;AAAlB,WAAd;AACD;AACF,OAzC4B;AAAA;;AAO7BE,IAAAA,iBAAiB,GAAG;AAClB,WAAKf,oBAAL;AACD;;AAEDgB,IAAAA,oBAAoB,GAAG;AACrB,WAAKL,sBAAL;AACD;;AA8BDM,IAAAA,MAAM,GAAG;AACP,YAAMlB,cAAc,GAClB,KAAKD,KAAL,CAAWC,cAAX,IAA6B,KAAKmB,KAAL,CAAWnB,cAD1C;AAEA,0BACE,QAAC,gBAAD,OAAsB,KAAKmB,KAA3B;AAAkC,QAAA,cAAc,EAAEnB;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AAjD4B,GAA/B,SACSL,WADT,GACwB,eAAcF,cAAc,CAACC,gBAAD,CAAmB,GADvE;AAmDD","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction getDisplayName(WrappedComponent) {\r\n  return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\r\n}\r\n\r\nexport function withApiProgress(WrappedComponent, apiPath) {\r\n  return class extends Component {\r\n    static displayName = `ApiProgress(${getDisplayName(WrappedComponent)})`;\r\n\r\n    state = {\r\n      pendingApiCall: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.registerInterceptors();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.unregisterInterceptors();\r\n    }\r\n    \r\n    registerInterceptors = () => {\r\n      this.requestInterceptor = axios.interceptors.request.use((request) => {\r\n        this.updateApiCallFor(request.url, true);\r\n        return request;\r\n      });\r\n      this.responseInterceptor = axios.interceptors.response.use(\r\n        (response) => {\r\n          this.updateApiCallFor(response.config.url, false);\r\n          return response;\r\n        },\r\n        (error) => {\r\n          this.updateApiCallFor(error.config.url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    };\r\n\r\n    unregisterInterceptors = () => {\r\n      axios.interceptors.request.eject(this.requestInterceptor);\r\n      axios.interceptors.response.eject(this.responseInterceptor);\r\n    };\r\n\r\n    updateApiCallFor = (url, inProgress) => {\r\n      if (url === apiPath) {\r\n        this.setState({ pendingApiCall: inProgress });\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const pendingApiCall =\r\n        this.state.pendingApiCall || this.props.pendingApiCall;\r\n      return (\r\n        <WrappedComponent {...this.props} pendingApiCall={pendingApiCall} />\r\n      );\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}