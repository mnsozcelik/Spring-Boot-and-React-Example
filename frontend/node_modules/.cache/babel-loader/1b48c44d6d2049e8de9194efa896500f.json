{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport authReducer from \"./authReducer\";\nimport SecureLS from \"secure-ls\";\nconst secureLs = new SecureLS();\n\nconst getStateFromStorage = () => {\n  const hoaxAuth = secureLs.get(\"hoax-auth\");\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: undefined,\n    displayName: undefined,\n    image: undefined,\n    password: undefined\n  };\n\n  if (hoaxAuth) {\n    return hoaxAuth;\n  }\n\n  return stateInLocalStorage;\n};\n\nconst updateStateInStorage = newState => {\n  secureLs.set(\"hoax-auth\", newState);\n};\n\nconst configureStore = () => {\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  const store = createStore(authReducer, getStateFromStorage(), applyMiddleware(thunk));\n  store.subscribe(() => {\n    updateStateInStorage(store.getState());\n  });\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["D:/Users/ozcelik/Desktop/workspace/frontend/src/redux/configureStore.js"],"names":["createStore","applyMiddleware","thunk","authReducer","SecureLS","secureLs","getStateFromStorage","hoaxAuth","get","stateInLocalStorage","isLoggedIn","username","undefined","displayName","image","password","updateStateInStorage","newState","set","configureStore","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,QAAQ,GAAG,IAAID,QAAJ,EAAjB;;AAEA,MAAME,mBAAmB,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,WAAb,CAAjB;AAEA,MAAIC,mBAAmB,GAAG;AACxBC,IAAAA,UAAU,EAAE,KADY;AAExBC,IAAAA,QAAQ,EAAEC,SAFc;AAGxBC,IAAAA,WAAW,EAAED,SAHW;AAIxBE,IAAAA,KAAK,EAAEF,SAJiB;AAKxBG,IAAAA,QAAQ,EAAEH;AALc,GAA1B;;AAQA,MAAIL,QAAJ,EAAc;AACV,WAAOA,QAAP;AACH;;AACD,SAAOE,mBAAP;AACD,CAfD;;AAiBA,MAAMO,oBAAoB,GAAIC,QAAD,IAAc;AACzCZ,EAAAA,QAAQ,CAACa,GAAT,CAAa,WAAb,EAA0BD,QAA1B;AACD,CAFD;;AAIA,MAAME,cAAc,GAAG,MAAM;AAC3B;AACA,QAAMC,KAAK,GAAGpB,WAAW,CACvBG,WADuB,EAEvBG,mBAAmB,EAFI,EAGvBL,eAAe,CAACC,KAAD,CAHQ,CAAzB;AAMAkB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBL,IAAAA,oBAAoB,CAACI,KAAK,CAACE,QAAN,EAAD,CAApB;AACD,GAFD;AAIA,SAAOF,KAAP;AACD,CAbD;;AAcA,eAAeD,cAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport authReducer from \"./authReducer\";\r\nimport SecureLS from \"secure-ls\";\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const hoaxAuth = secureLs.get(\"hoax-auth\");\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined,\r\n  };\r\n\r\n  if (hoaxAuth) {\r\n      return hoaxAuth;\r\n  }\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = (newState) => {\r\n  secureLs.set(\"hoax-auth\", newState);\r\n};\r\n\r\nconst configureStore = () => {\r\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  const store = createStore(\r\n    authReducer,\r\n    getStateFromStorage(),\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n  });\r\n\r\n  return store;\r\n};\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}