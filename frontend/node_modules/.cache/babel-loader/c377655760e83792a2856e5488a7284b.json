{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const useApiProgress = apiPath => {\n  _s();\n\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  useEffect(() => {\n    let requestInterceptor, responseInterceptor;\n\n    const updateApiCallFor = (url, inProgress) => {\n      if (url.startWith(apiPath)) {\n        setPendingApiCall(inProgress);\n      }\n    };\n\n    const unregisterInterceptors = () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n\n    const registerInterceptors = () => {\n      requestInterceptor = axios.interceptors.request.use(request => {\n        updateApiCallFor(request.url, true);\n        return request;\n      });\n      responseInterceptor = axios.interceptors.response.use(response => {\n        updateApiCallFor(response.config.url, false);\n        return response;\n      }, error => {\n        updateApiCallFor(error.config.url, false);\n        throw error;\n      });\n    };\n\n    registerInterceptors();\n    return function unmount() {\n      unregisterInterceptors();\n    };\n  }, []);\n  return pendingApiCall;\n};\n\n_s(useApiProgress, \"dxeikoFXtsTGpF/7CQdkmajlavs=\");","map":{"version":3,"sources":["D:/Users/ozcelik/Desktop/workspace/frontend/src/shared/ApiProgress.js"],"names":["useState","useEffect","axios","useApiProgress","apiPath","pendingApiCall","setPendingApiCall","requestInterceptor","responseInterceptor","updateApiCallFor","url","inProgress","startWith","unregisterInterceptors","interceptors","request","eject","response","registerInterceptors","use","config","error","unmount"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAAA;;AACzC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,kBAAJ,EAAwBC,mBAAxB;;AAEA,UAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC5C,UAAID,GAAG,CAACE,SAAJ,CAAcR,OAAd,CAAJ,EAA4B;AAC1BE,QAAAA,iBAAiB,CAACK,UAAD,CAAjB;AACD;AACF,KAJD;;AAMA,UAAME,sBAAsB,GAAG,MAAM;AACnCX,MAAAA,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,KAA3B,CAAiCT,kBAAjC;AACAL,MAAAA,KAAK,CAACY,YAAN,CAAmBG,QAAnB,CAA4BD,KAA5B,CAAkCR,mBAAlC;AACD,KAHD;;AAKA,UAAMU,oBAAoB,GAAG,MAAM;AACjCX,MAAAA,kBAAkB,GAAGL,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BI,GAA3B,CAAgCJ,OAAD,IAAa;AAC/DN,QAAAA,gBAAgB,CAACM,OAAO,CAACL,GAAT,EAAc,IAAd,CAAhB;AACA,eAAOK,OAAP;AACD,OAHoB,CAArB;AAIAP,MAAAA,mBAAmB,GAAGN,KAAK,CAACY,YAAN,CAAmBG,QAAnB,CAA4BE,GAA5B,CACnBF,QAAD,IAAc;AACZR,QAAAA,gBAAgB,CAACQ,QAAQ,CAACG,MAAT,CAAgBV,GAAjB,EAAsB,KAAtB,CAAhB;AACA,eAAOO,QAAP;AACD,OAJmB,EAKnBI,KAAD,IAAW;AACTZ,QAAAA,gBAAgB,CAACY,KAAK,CAACD,MAAN,CAAaV,GAAd,EAAmB,KAAnB,CAAhB;AACA,cAAMW,KAAN;AACD,OARmB,CAAtB;AAUD,KAfD;;AAiBAH,IAAAA,oBAAoB;AACpB,WAAO,SAASI,OAAT,GAAmB;AACxBT,MAAAA,sBAAsB;AACvB,KAFD;AAGD,GAnCQ,EAmCP,EAnCO,CAAT;AAqCA,SAAOR,cAAP;AACD,CAzCM;;GAAMF,c","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useApiProgress = (apiPath) => {\r\n  const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let requestInterceptor, responseInterceptor;\r\n\r\n    const updateApiCallFor = (url, inProgress) => {\r\n      if (url.startWith(apiPath)) {\r\n        setPendingApiCall(inProgress);\r\n      }\r\n    };\r\n\r\n    const unregisterInterceptors = () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n\r\n    const registerInterceptors = () => {\r\n      requestInterceptor = axios.interceptors.request.use((request) => {\r\n        updateApiCallFor(request.url, true);\r\n        return request;\r\n      });\r\n      responseInterceptor = axios.interceptors.response.use(\r\n        (response) => {\r\n          updateApiCallFor(response.config.url, false);\r\n          return response;\r\n        },\r\n        (error) => {\r\n          updateApiCallFor(error.config.url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    };\r\n\r\n    registerInterceptors();\r\n    return function unmount() {\r\n      unregisterInterceptors();\r\n    };\r\n  },[]);\r\n\r\n  return pendingApiCall;\r\n};"]},"metadata":{},"sourceType":"module"}