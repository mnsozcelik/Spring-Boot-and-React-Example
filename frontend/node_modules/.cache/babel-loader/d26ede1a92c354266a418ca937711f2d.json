{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\ozcelik\\\\Desktop\\\\workspace\\\\frontend\\\\src\\\\shared\\\\ApiProgress.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ApiProgress extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pendingApiCall: false\n    };\n\n    this.updateApiCallFor = (url, inProgress) => {\n      if (url === this.props.path) {\n        this.setState({\n          pendingApiCall: inProgress\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.interceptors.request.use(request => {\n      //   if (request.url === this.props.path) {\n      //     this.setState({ pendingApiCall: true });\n      //   }\n      this.updateApiCallFor(request.url, true);\n      return request;\n    });\n    axios.interceptors.response.use(response => {\n      // if (response.config.url === this.props.path) {\n      //   this.setState({ pendingApiCall: false });\n      // }\n      this.updateApiCallFor(response.config.url, false);\n      return response;\n    }, error => {\n      // if (error.config.url === this.props.path) {\n      //   this.setState({ pendingApiCall: false });\n      // }\n      this.updateApiCallFor(response.config.url, false);\n      throw error;\n    });\n  }\n\n  render() {\n    const {\n      pendingApiCall\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/React.cloneElement(this.props.children, {\n        pendingApiCall\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ApiProgress;","map":{"version":3,"sources":["D:/Users/ozcelik/Desktop/workspace/frontend/src/shared/ApiProgress.js"],"names":["React","Component","axios","ApiProgress","state","pendingApiCall","updateApiCallFor","url","inProgress","props","path","setState","componentDidMount","interceptors","request","use","response","config","error","render","cloneElement","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AACNC,MAAAA,cAAc,EAAE;AADV,KAD0B;;AAAA,SA+BlCC,gBA/BkC,GA+Bf,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACtC,UAAID,GAAG,KAAK,KAAKE,KAAL,CAAWC,IAAvB,EAA6B;AAC3B,aAAKC,QAAL,CAAc;AAAEN,UAAAA,cAAc,EAAEG;AAAlB,SAAd;AACD;AACF,KAnCiC;AAAA;;AAKlCI,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCD,OAAD,IAAa;AAC5C;AACA;AACA;AACE,WAAKR,gBAAL,CAAsBQ,OAAO,CAACP,GAA9B,EAAmC,IAAnC;AACA,aAAOO,OAAP;AACD,KAND;AAOAZ,IAAAA,KAAK,CAACW,YAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CACGC,QAAD,IAAc;AACZ;AACA;AACA;AACA,WAAKV,gBAAL,CAAsBU,QAAQ,CAACC,MAAT,CAAgBV,GAAtC,EAA2C,KAA3C;AACA,aAAOS,QAAP;AACD,KAPH,EAQGE,KAAD,IAAW;AACT;AACA;AACA;AACA,WAAKZ,gBAAL,CAAsBU,QAAQ,CAACC,MAAT,CAAgBV,GAAtC,EAA2C,KAA3C;AACA,YAAMW,KAAN;AACD,KAdH;AAgBD;;AAQDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAqB,KAAKD,KAAhC;AACA,wBACE;AAAA,6BACGJ,KAAK,CAACoB,YAAN,CAAmB,KAAKX,KAAL,CAAWY,QAA9B,EAAwC;AACvChB,QAAAA;AADuC,OAAxC;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA9CiC;;AAiDpC,eAAeF,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass ApiProgress extends Component {\r\n  state = {\r\n    pendingApiCall: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.interceptors.request.use((request) => {\r\n    //   if (request.url === this.props.path) {\r\n    //     this.setState({ pendingApiCall: true });\r\n    //   }\r\n      this.updateApiCallFor(request.url, true);\r\n      return request;\r\n    });\r\n    axios.interceptors.response.use(\r\n      (response) => {\r\n        // if (response.config.url === this.props.path) {\r\n        //   this.setState({ pendingApiCall: false });\r\n        // }\r\n        this.updateApiCallFor(response.config.url, false);\r\n        return response;\r\n      },\r\n      (error) => {\r\n        // if (error.config.url === this.props.path) {\r\n        //   this.setState({ pendingApiCall: false });\r\n        // }\r\n        this.updateApiCallFor(response.config.url, false);\r\n        throw error;\r\n      }\r\n    );\r\n  }\r\n\r\n  updateApiCallFor = (url, inProgress) => {\r\n    if (url === this.props.path) {\r\n      this.setState({ pendingApiCall: inProgress });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pendingApiCall } = this.state;\r\n    return (\r\n      <div>\r\n        {React.cloneElement(this.props.children, {\r\n          pendingApiCall,\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApiProgress;\r\n"]},"metadata":{},"sourceType":"module"}