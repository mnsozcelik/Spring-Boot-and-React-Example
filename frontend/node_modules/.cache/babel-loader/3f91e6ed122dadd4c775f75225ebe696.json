{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\ozcelik\\\\Desktop\\\\workspace\\\\frontend\\\\src\\\\shared\\\\ApiProgress.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function withApiProgress(WrappedComponent, apiPath) {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        pendingApiCall: false\n      };\n\n      this.updateApiCallFor = (url, inProgress) => {\n        if (url === apiPath) {\n          this.setState({\n            pendingApiCall: inProgress\n          });\n        }\n      };\n    }\n\n    componentDidMount() {\n      axios.interceptors.request.use(request => {\n        this.updateApiCallFor(request.url, true);\n        return request;\n      });\n      axios.interceptors.response.use(response => {\n        this.updateApiCallFor(response.config.url, false);\n        return response;\n      }, error => {\n        this.updateApiCallFor(error.config.url, false);\n        throw error;\n      });\n    }\n\n    render() {\n      const {\n        pendingApiCall\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        pendingApiCall: pendingApiCall,\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    }\n\n  }, _temp;\n}","map":{"version":3,"sources":["D:/Users/ozcelik/Desktop/workspace/frontend/src/shared/ApiProgress.js"],"names":["React","Component","axios","withApiProgress","WrappedComponent","apiPath","state","pendingApiCall","updateApiCallFor","url","inProgress","setState","componentDidMount","interceptors","request","use","response","config","error","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,eAAT,CAAyBC,gBAAzB,EAA4CC,OAA5C,EAAqD;AAAA;;AAC1D,iBAAO,cAAcJ,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC7BK,KAD6B,GACrB;AACNC,QAAAA,cAAc,EAAE;AADV,OADqB;;AAAA,WAsB7BC,gBAtB6B,GAsBV,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACtC,YAAID,GAAG,KAAKJ,OAAZ,EAAqB;AACnB,eAAKM,QAAL,CAAc;AAAEJ,YAAAA,cAAc,EAAEG;AAAlB,WAAd;AACD;AACF,OA1B4B;AAAA;;AAK7BE,IAAAA,iBAAiB,GAAG;AAClBV,MAAAA,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCD,OAAD,IAAa;AAC1C,aAAKN,gBAAL,CAAsBM,OAAO,CAACL,GAA9B,EAAmC,IAAnC;AACA,eAAOK,OAAP;AACD,OAHD;AAIAZ,MAAAA,KAAK,CAACW,YAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CACGC,QAAD,IAAc;AACZ,aAAKR,gBAAL,CAAsBQ,QAAQ,CAACC,MAAT,CAAgBR,GAAtC,EAA2C,KAA3C;AACA,eAAOO,QAAP;AACD,OAJH,EAKGE,KAAD,IAAW;AACT,aAAKV,gBAAL,CAAsBU,KAAK,CAACD,MAAN,CAAaR,GAAnC,EAAwC,KAAxC;AACA,cAAMS,KAAN;AACD,OARH;AAUD;;AAQDC,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEZ,QAAAA;AAAF,UAAqB,KAAKD,KAAhC;AACE,0BAAO,QAAC,gBAAD;AAAkB,QAAA,cAAc,EAAEC,cAAlC;AAAA,WAAsD,KAAKa;AAA3D;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AA/B4B,GAA/B;AAiCD","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function withApiProgress(WrappedComponent , apiPath) {\r\n  return class extends Component {\r\n    state = {\r\n      pendingApiCall: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n      axios.interceptors.request.use((request) => {\r\n        this.updateApiCallFor(request.url, true);\r\n        return request;\r\n      });\r\n      axios.interceptors.response.use(\r\n        (response) => {\r\n          this.updateApiCallFor(response.config.url, false);\r\n          return response;\r\n        },\r\n        (error) => {\r\n          this.updateApiCallFor(error.config.url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    }\r\n\r\n    updateApiCallFor = (url, inProgress) => {\r\n      if (url === apiPath) {\r\n        this.setState({ pendingApiCall: inProgress });\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const { pendingApiCall } = this.state;\r\n        return <WrappedComponent pendingApiCall={pendingApiCall} {...this.props}/>\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}